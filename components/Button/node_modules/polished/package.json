{
  "_args": [
    [
      {
        "raw": "polished@^1.3.0",
        "scope": null,
        "escapedName": "polished",
        "name": "polished",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "/Users/esoj/Proyectos/styled-bootstrap/components/Button"
    ]
  ],
  "_from": "polished@>=1.3.0 <2.0.0",
  "_id": "polished@1.4.0",
  "_inCache": true,
  "_location": "/polished",
  "_nodeVersion": "6.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/polished-1.4.0.tgz_1502211208945_0.857278804294765"
  },
  "_npmUser": {
    "name": "mxstbr",
    "email": "npm@mxstbr.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "polished@^1.3.0",
    "scope": null,
    "escapedName": "polished",
    "name": "polished",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/polished/-/polished-1.4.0.tgz",
  "_shasum": "748ef6e83ac84e1257a5c9cec9ed95aeba7c0c7e",
  "_shrinkwrap": null,
  "_spec": "polished@^1.3.0",
  "_where": "/Users/esoj/Proyectos/styled-bootstrap/components/Button",
  "author": {
    "name": "Max Stoiber",
    "email": "contact@mxstbr.com",
    "url": "http://mxstbr.com"
  },
  "bugs": {
    "url": "https://github.com/styled-components/polished/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "A lightweight toolset for writing styles in Javascript.",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.18.2",
    "babel-eslint": "^7.1.0",
    "babel-jest": "^16.0.0",
    "babel-loader": "^6.2.7",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-external-helpers": "^6.18.0",
    "babel-plugin-syntax-trailing-function-commas": "^6.22.0",
    "babel-plugin-transform-flow-strip-types": "^6.18.0",
    "babel-plugin-transform-object-rest-spread": "^6.16.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-env": "^1.5.2",
    "concat-stream": "^1.5.2",
    "cz-conventional-changelog": "^1.2.0",
    "documentation": "4.0.0-beta.18",
    "eslint": "^3.9.1",
    "eslint-config-airbnb-base": "^10.0.1",
    "eslint-plugin-import": "^2.2.0",
    "flow-bin": "^0.36.0",
    "flow-copy-source": "^1.1.0",
    "github-slugger": "^1.1.1",
    "highlight.js": "^9.9.0",
    "husky": "^0.14.3",
    "jest": "^16.0.2",
    "lint-staged": "^4.0.2",
    "lodash": "^4.17.2",
    "npm-watch": "^0.1.6",
    "prettier": "^1.5.3",
    "pushstate-server": "^2.1.0",
    "ramda": "^0.23.0",
    "rollup": "^0.36.3",
    "rollup-plugin-babel": "^2.6.1",
    "rollup-plugin-commonjs": "^5.0.5",
    "rollup-plugin-flow": "^1.0.1",
    "rollup-plugin-inject": "^2.0.0",
    "rollup-plugin-json": "^2.0.2",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-plugin-replace": "^1.1.1",
    "rollup-plugin-uglify": "^1.0.1",
    "shx": "^0.2.2",
    "validate-commit-msg": "^2.8.2",
    "vinyl": "^2.0.1",
    "vinyl-fs": "^2.4.4"
  },
  "directories": {},
  "dist": {
    "shasum": "748ef6e83ac84e1257a5c9cec9ed95aeba7c0c7e",
    "tarball": "https://registry.npmjs.org/polished/-/polished-1.4.0.tgz"
  },
  "gitHead": "147370efe83203aaa102234e8122422097ec9e73",
  "homepage": "https://github.com/styled-components/polished#readme",
  "jest": {
    "coverageDirectory": "./coverage/",
    "collectCoverage": true
  },
  "jsnext:main": "dist/polished.es.js",
  "keywords": [
    "styled-components",
    "polished",
    "css-in-js",
    "inline-styles",
    "react"
  ],
  "license": "MIT",
  "lint-staged": {
    "src/**/!(*.test).js": [
      "prettier --no-semi --single-quote --trailing-comma all --write",
      "eslint --fix",
      "git add"
    ],
    "src/**/*.test.js": [
      "prettier --no-semi --single-quote --trailing-comma all --write",
      "eslint --fix",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bhough",
      "email": "brian.r.hough@gmail.com"
    },
    {
      "name": "nikgraf",
      "email": "nik@nikgraf.com"
    },
    {
      "name": "mxstbr",
      "email": "npm@mxstbr.com"
    }
  ],
  "module": "dist/polished.es.js",
  "name": "polished",
  "optionalDependencies": {},
  "readme": "<a href=\"https://github.com/styled-components/polished\">\n  <img alt=\"polished\" src=\"https://raw.githubusercontent.com/styled-components/brand/master/polished.png\" height=\"150px\" />\n</a>\n<br />\n\nA lightweight toolset for writing styles in JavaScript. ✨\n\n[![Build Status](https://travis-ci.org/styled-components/polished.svg?branch=master)](https://travis-ci.org/styled-components/polished) [![codecov](https://codecov.io/gh/styled-components/polished/branch/master/graph/badge.svg)](https://codecov.io/gh/styled-components/polished) [![Dependency Status](https://david-dm.org/styled-components/polished/status.svg)](https://david-dm.org/styled-components/polished) [![Supported by Thinkmill](https://thinkmill.github.io/badge/heart.svg)](http://thinkmill.com.au/?utm_source=github&utm_medium=badge&utm_campaign=polished)\n\n```sh\nnpm install --save polished\n# or if you're using yarn\nyarn add polished\n```\n\nWant to write styles in JavaScript, but also want Sass-style helper functions and mixins? Need a consistent color palette throughout your app? `✨ polished` is for you!\n\n- **Make your app look great without stress**\n- **Cross framework compatible**: No matter if you're using `styled-components`, aphrodite, radium, or plain inline styles, as long as you're writing your styles in JavaScript you can use polished!\n- **Switching from a pre-processor to styles in JS made easy**\n\n## Usage\n\n`✨ polished` modules are meant to be used as stand-alone imports. You should avoid importing the entire library directly:\n\n`import { clearFix, animation } from 'polished'`\n~`import * as polished from 'polished`~\n~`import polished from 'polished'`~\n\nWhen `✨ polished` modules are imported properly, tree shaking in [webpack 2](https://webpack.js.org/guides/tree-shaking/) and [Rollup](https://github.com/rollup/rollup#tree-shaking) can be leveraged to reduce your bundle size.\n\n## Flow Type Definitions\n\n### Ignore ✨ polished source\n\nIf you are using [Flow](https://flow.org/) and run into errors coming from the `polished` package in your `node_modules` directory, you should add the following lines to your `.flowconfig`:\n\n```bash\n[ignore]\n.*/node_modules/polished/.*\n```\n\n## Docs\n\n**See the full documentation at [polished.js.org](http://polished.js.org/docs)!**\n\n### Babel plugin\n\nYou can optionally also use [`babel-plugin-polished`](https://github.com/styled-components/babel-plugin-polished) to compile the static function calls out and remove the (already tiny) runtime performance impact of using `✨ polished`.\n\n### Object Spread Properties\n\nIn the documentation you will see examples using [object spread properties](https://github.com/tc39/proposal-object-rest-spread). (`{ ...other }`) To enable this syntax in your project add the [`transform-object-rest-spread` plugin](https://www.npmjs.com/package/babel-plugin-transform-object-rest-spread) (or the [`stage-3` preset](https://babeljs.io/docs/plugins/preset-stage-3/) to enable all stage three features) to your Babel configuration.\n\n### ToC\n\n<!-- NOTE: Anything between INJECT DOCS START and END will be deleted! -->\n<!-- INJECT DOCS START -->\n<details open>\n  <summary>Mixins</summary>\n  <ul>\n    <li><a href=\"http://polished.js.org/docs/#clearfix\">clearFix</a></li>\n    <li><a href=\"http://polished.js.org/docs/#ellipsis\">ellipsis</a></li>\n    <li><a href=\"http://polished.js.org/docs/#fontface\">fontFace</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hidpi\">hiDPI</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hidetext\">hideText</a></li>\n    <li><a href=\"http://polished.js.org/docs/#normalize\">normalize</a></li>\n    <li><a href=\"http://polished.js.org/docs/#placeholder\">placeholder</a></li>\n    <li><a href=\"http://polished.js.org/docs/#radialgradient\">radialGradient</a></li>\n    <li><a href=\"http://polished.js.org/docs/#retinaimage\">retinaImage</a></li>\n    <li><a href=\"http://polished.js.org/docs/#selection\">selection</a></li>\n    <li><a href=\"http://polished.js.org/docs/#timingfunctions\">timingFunctions</a></li>\n    <li><a href=\"http://polished.js.org/docs/#triangle\">triangle</a></li>\n    <li><a href=\"http://polished.js.org/docs/#wordwrap\">wordWrap</a></li>\n  </ul>\n</details>\n<details open>\n  <summary>Color</summary>\n  <ul>\n    <li><a href=\"http://polished.js.org/docs/#adjusthue\">adjustHue</a></li>\n    <li><a href=\"http://polished.js.org/docs/#complement\">complement</a></li>\n    <li><a href=\"http://polished.js.org/docs/#darken\">darken</a></li>\n    <li><a href=\"http://polished.js.org/docs/#desaturate\">desaturate</a></li>\n    <li><a href=\"http://polished.js.org/docs/#grayscale\">grayscale</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hsl\">hsl</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hsla\">hsla</a></li>\n    <li><a href=\"http://polished.js.org/docs/#invert\">invert</a></li>\n    <li><a href=\"http://polished.js.org/docs/#lighten\">lighten</a></li>\n    <li><a href=\"http://polished.js.org/docs/#mix\">mix</a></li>\n    <li><a href=\"http://polished.js.org/docs/#opacify\">opacify</a></li>\n    <li><a href=\"http://polished.js.org/docs/#parsetohsl\">parseToHsl</a></li>\n    <li><a href=\"http://polished.js.org/docs/#parsetorgb\">parseToRgb</a></li>\n    <li><a href=\"http://polished.js.org/docs/#readablecolor\">readableColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#rgb\">rgb</a></li>\n    <li><a href=\"http://polished.js.org/docs/#rgba\">rgba</a></li>\n    <li><a href=\"http://polished.js.org/docs/#saturate\">saturate</a></li>\n    <li><a href=\"http://polished.js.org/docs/#sethue\">setHue</a></li>\n    <li><a href=\"http://polished.js.org/docs/#setlightness\">setLightness</a></li>\n    <li><a href=\"http://polished.js.org/docs/#setsaturation\">setSaturation</a></li>\n    <li><a href=\"http://polished.js.org/docs/#shade\">shade</a></li>\n    <li><a href=\"http://polished.js.org/docs/#tint\">tint</a></li>\n    <li><a href=\"http://polished.js.org/docs/#transparentize\">transparentize</a></li>\n  </ul>\n</details>\n<details open>\n  <summary>Shorthands</summary>\n  <ul>\n    <li><a href=\"http://polished.js.org/docs/#animation\">animation</a></li>\n    <li><a href=\"http://polished.js.org/docs/#backgroundimages\">backgroundImages</a></li>\n    <li><a href=\"http://polished.js.org/docs/#backgrounds\">backgrounds</a></li>\n    <li><a href=\"http://polished.js.org/docs/#bordercolor\">borderColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#borderradius\">borderRadius</a></li>\n    <li><a href=\"http://polished.js.org/docs/#borderstyle\">borderStyle</a></li>\n    <li><a href=\"http://polished.js.org/docs/#borderwidth\">borderWidth</a></li>\n    <li><a href=\"http://polished.js.org/docs/#buttons\">buttons</a></li>\n    <li><a href=\"http://polished.js.org/docs/#margin\">margin</a></li>\n    <li><a href=\"http://polished.js.org/docs/#padding\">padding</a></li>\n    <li><a href=\"http://polished.js.org/docs/#position\">position</a></li>\n    <li><a href=\"http://polished.js.org/docs/#size\">size</a></li>\n    <li><a href=\"http://polished.js.org/docs/#textinputs\">textInputs</a></li>\n    <li><a href=\"http://polished.js.org/docs/#transitions\">transitions</a></li>\n  </ul>\n</details>\n<details open>\n  <summary>Helpers</summary>\n  <ul>\n    <li><a href=\"http://polished.js.org/docs/#directionalproperty\">directionalProperty</a></li>\n    <li><a href=\"http://polished.js.org/docs/#em\">em</a></li>\n    <li><a href=\"http://polished.js.org/docs/#modularscale\">modularScale</a></li>\n    <li><a href=\"http://polished.js.org/docs/#rem\">rem</a></li>\n    <li><a href=\"http://polished.js.org/docs/#stripunit\">stripUnit</a></li>\n  </ul>\n</details>\n<details open>\n  <summary>Types</summary>\n  <ul>\n    <li><a href=\"http://polished.js.org/docs/#animationproperty\">AnimationProperty</a></li>\n    <li><a href=\"http://polished.js.org/docs/#buttonstate\">ButtonState</a></li>\n    <li><a href=\"http://polished.js.org/docs/#fontfaceconfiguration\">FontFaceConfiguration</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hslcolor\">HslColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#hslacolor\">HslaColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#inputstate\">InputState</a></li>\n    <li><a href=\"http://polished.js.org/docs/#pointingdirection\">PointingDirection</a></li>\n    <li><a href=\"http://polished.js.org/docs/#radialgradientconfiguration\">RadialGradientConfiguration</a></li>\n    <li><a href=\"http://polished.js.org/docs/#ratio\">Ratio</a></li>\n    <li><a href=\"http://polished.js.org/docs/#rgbacolor\">RgbaColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#rgbcolor\">RgbColor</a></li>\n    <li><a href=\"http://polished.js.org/docs/#timingfunction\">TimingFunction</a></li>\n    <li><a href=\"http://polished.js.org/docs/#tocolorstring\">toColorString</a></li>\n  </ul>\n</details>\n<!-- INJECT DOCS END -->\n\n## Why?\n\nWhen writing styles in JavaScript, many people need Sass-style helper functions to be productive. `✨ polished` brings them to you in a nice, lightweight package tailor-made for styles in JavaScript.\n\nThe main difference with Sass is that it's written in a functional style and all color functions are curried. This means you can compose them together into your own reusable helpers with a `compose` function of your choice:\n\n```JS\nimport { compose } from 'ramda' // Replace with any compose() function of your choice\nimport { lighten, desaturate } from 'polished'\n\n// Create tone() helper\nconst tone = compose(lighten(10), desaturate(10))\n```\n\n### Why not `package-xyz`?\n\nFirst of all, we didn't find another library that had everything we needed, and we don't care about installing a dozen packages separately.\n\nSpecifically most other packages that provide color functions do so in an object-oriented style, often with a fluent API that's very different from the Sass-style helpers. This means people that aren't very familiar with JavaScript might shy away from using them.\n\n`✨ polished` was made as a standard library for everybody, no matter if they know JS inside out or not.\n\n## Compatibility\n\n✨ polished is **compatible with any library that accepts styles as JS objects**. This includes, but is by far not limited to, `styled-components`, radium, aphrodite, glamor, glamorous, jss and many more!\n\nNo matter if you're using [inline styles or CSS-in-JS](http://mxstbr.blog/2016/11/inline-styles-vs-css-in-js/), polished is for you.\n\n## License\n\nCopyright © 2016 Maximilian Stoiber. Licensed under the MIT License, see [LICENSE.md](LICENSE.md) for more information!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/styled-components/polished.git"
  },
  "scripts": {
    "build": "npm run build:lib && npm run build:dist && npm run build:flow && npm run build:docs",
    "build:dist": "rollup -c && rollup -c --environment PRODUCTION",
    "build:docs": "npm run build:docs:site && npm run build:docs:readme",
    "build:docs:readme": "documentation build src/** -t docs-theme/markdown.js --github -o docs -f html -c ./.documentation.json",
    "build:docs:site": "documentation build src/** -t docs-theme --github -o docs -f html -c ./.documentation.json",
    "build:flow": "flow-copy-source -v -i '{**/test/*.js,**/*.test.js}' src lib",
    "build:lib": "babel --out-dir lib src --ignore test.js",
    "build:watch": "npm-watch",
    "docs": "pushstate-server docs",
    "flow": "flow check",
    "lint": "eslint src",
    "postbuild:docs:site": "shx cp CNAME docs/CNAME && shx cp dist/polished.js docs/assets/",
    "postcommit": "validate-commit-msg",
    "prebuild:dist": "shx rm -rf dist/*",
    "prebuild:docs:site": "shx rm -rf docs/*",
    "prebuild:lib": "shx rm -rf lib/*",
    "prebuild:umd": "shx rm -rf dist/*",
    "precommit": "lint-staged --verbose",
    "prepublish": "npm run build",
    "test": "jest src"
  },
  "version": "1.4.0",
  "watch": {
    "build:docs": "src/**/*.js",
    "build:lib": "src/**/*.js"
  }
}
