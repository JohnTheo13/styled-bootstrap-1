{
  "_args": [
    [
      {
        "raw": "rollup-plugin-multi-entry",
        "scope": null,
        "escapedName": "rollup-plugin-multi-entry",
        "name": "rollup-plugin-multi-entry",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/esoj/Proyectos/styled-bootstrap/components/Button"
    ]
  ],
  "_from": "rollup-plugin-multi-entry@latest",
  "_id": "rollup-plugin-multi-entry@2.0.1",
  "_inCache": true,
  "_location": "/rollup-plugin-multi-entry",
  "_nodeVersion": "0.12.14",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/rollup-plugin-multi-entry-2.0.1.tgz_1470080248235_0.8197593430522829"
  },
  "_npmUser": {
    "name": "trysound",
    "email": "trysound@yandex.ru"
  },
  "_npmVersion": "3.9.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-multi-entry",
    "scope": null,
    "escapedName": "rollup-plugin-multi-entry",
    "name": "rollup-plugin-multi-entry",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-multi-entry/-/rollup-plugin-multi-entry-2.0.1.tgz",
  "_shasum": "4b3aea8ddc5afc9b7f9ffbfb1441c04ef39071b4",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-multi-entry",
  "_where": "/Users/esoj/Proyectos/styled-bootstrap/components/Button",
  "author": {
    "name": "Brian Donovan",
    "email": "me@brian-donovan.com"
  },
  "bugs": {
    "url": "https://github.com/rollup/rollup-plugin-multi-entry/issues"
  },
  "dependencies": {
    "matched": "^0.4.3"
  },
  "description": "Allows specifying multiple entry points with rollup.",
  "devDependencies": {
    "babel-plugin-transform-flow-strip-types": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-rollup": "^1.1.1",
    "babel-register": "^6.9.0",
    "babelrc-rollup": "^1.1.0",
    "flow-bin": "^0.27.0",
    "mocha": "^3.0.0",
    "rollup": "^0.33.0",
    "rollup-plugin-babel": "^2.6.1",
    "semantic-release": "^4.3.5"
  },
  "directories": {},
  "dist": {
    "shasum": "4b3aea8ddc5afc9b7f9ffbfb1441c04ef39071b4",
    "tarball": "https://registry.npmjs.org/rollup-plugin-multi-entry/-/rollup-plugin-multi-entry-2.0.1.tgz"
  },
  "files": [
    "dist"
  ],
  "gitHead": "a779dc2942af1c91ef98adc189d549bb4f3f9c01",
  "homepage": "https://github.com/rollup/rollup-plugin-multi-entry#readme",
  "jsnext:main": "dist/rollup-plugin-multi-entry.mjs",
  "keywords": [
    "rollup-plugin"
  ],
  "license": "MIT",
  "main": "dist/rollup-plugin-multi-entry.js",
  "maintainers": [
    {
      "name": "eventualbuddha",
      "email": "me@brian-donovan.com"
    },
    {
      "name": "rich_harris",
      "email": "richard.a.harris@gmail.com"
    },
    {
      "name": "trysound",
      "email": "trysound@yandex.ru"
    },
    {
      "name": "victorystick",
      "email": "victorystick@gmail.com"
    }
  ],
  "name": "rollup-plugin-multi-entry",
  "optionalDependencies": {},
  "readme": "# rollup-plugin-multi-entry\r\n\r\nUse multiple entry points in your [rollup](https://github.com/rollup/rollup)\r\nbundle. This is particularly useful for tests, but can also be used to package\r\na library. The exports from all the entry points will be combined, e.g.\r\n\r\n```js\r\n// a.js\r\nexport const a = 1;\r\n\r\n// b.js\r\nexport const b = 2;\r\n\r\n// c.js\r\nexport const c = 3;\r\n```\r\n\r\nUsing all three files above as entry points will yield a bundle with exports for\r\n`a`, `b`, and `c`.\r\n\r\n## Install\r\n\r\n```\r\n$ npm install [--save-dev] rollup-plugin-multi-entry\r\n```\r\n\r\n## Usage\r\n\r\nThis plugin requires at least v0.25.4 of rollup. In `rollup.config.js`:\r\n\r\n```js\r\nimport multiEntry from 'rollup-plugin-multi-entry';\r\n\r\nexport default {\r\n  entry: 'test/**/*.js',\r\n  plugins: [multiEntry()]\r\n};\r\n```\r\n\r\nThe `entry` above is the simplest form which simply takes a glob string. If you\r\nwish, you may pass an array of glob strings or, for finer control, an object\r\nwith `include` and `exclude` properties each taking an array of glob strings,\r\ne.g.\r\n\r\n```js\r\n// The usual rollup entry configuration works.\r\nexport default {\r\n  entry: 'just/one/file.js',\r\n  plugins: [multiEntry()]\r\n  // ...\r\n};\r\n\r\n// As does a glob of files.\r\nexport default {\r\n  entry: 'a/glob/of/files/**/*.js',\r\n  plugins: [multiEntry()]\r\n  // ...\r\n};\r\n\r\n// Or an array of files and globs.\r\nexport default {\r\n  entry: ['an/array.js', 'of/files.js', 'or/globs/**/*.js'],\r\n  plugins: [multiEntry()]\r\n  // ...\r\n};\r\n\r\n// For maximum control, arrays of globs to include and exclude.\r\nexport default {\r\n  entry: {\r\n    include: ['files.js', 'and/globs/**/*.js', 'to/include.js'],\r\n    exclude: ['those/files.js', 'and/globs/*.to.be.excluded.js']\r\n  },\r\n  plugins: [multiEntry()]\r\n  // ...\r\n};\r\n```\r\n\r\nSometimes you may not want to export anything from the rolled-up bundle. In\r\nsuch cases, use the `exports: false` option like so:\r\n\r\n```js\r\nexport default {\r\n  entry: 'src/*.js',\r\n  plugins: [multiEntry({ exports: false })]\r\n};\r\n```\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rollup/rollup-plugin-multi-entry.git"
  },
  "scripts": {
    "build": "rm -rf dist && rollup -c",
    "flow": "flow check",
    "prepublish": "npm test",
    "pretest": "npm run flow && npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "mocha"
  },
  "version": "2.0.1"
}
